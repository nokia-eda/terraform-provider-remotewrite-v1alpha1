{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterDestination": {
        "description": "ClusterDestination is the Schema for the clusterdestinations API",
        "properties": {
          "apiVersion": {
            "default": "remotewrite.eda.nokia.com/v1alpha1",
            "pattern": "^remotewrite\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to remotewrite.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterDestination",
            "pattern": "^ClusterDestination$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterDestination",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination_metadata"
          },
          "spec": {
            "description": "ClusterDestinationSpec defines the desired state of ClusterDestination",
            "properties": {
              "authentication": {
                "description": "Authentication details (username and password) for accessing the server.",
                "properties": {
                  "password": {
                    "description": "Client password",
                    "title": "Password",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 801,
                      "ui-single-line-group": "Authentication"
                    }
                  },
                  "username": {
                    "description": "Client username",
                    "title": "Username",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 800,
                      "ui-single-line-group": "Authentication"
                    }
                  }
                },
                "title": "Authentication",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 300,
                  "ui-presence-toggle": true
                }
              },
              "authorization": {
                "description": "Authorization token for accessing the server.",
                "properties": {
                  "credentials": {
                    "description": "Credentials such as a token value",
                    "title": "Credentials",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1001,
                      "ui-single-line-group": "Authorization"
                    }
                  },
                  "type": {
                    "default": "Bearer",
                    "description": "Authorization type",
                    "title": "Type",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1000,
                      "ui-single-line-group": "Authorization"
                    }
                  }
                },
                "title": "Authorization",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 400,
                  "ui-presence-toggle": true
                }
              },
              "metadata": {
                "description": "Configuration related to sending metadata to the remote server.",
                "properties": {
                  "include": {
                    "description": "If enabled, includes metadata in the write requests.",
                    "title": "Include Metadata",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 810
                    }
                  },
                  "interval": {
                    "default": "60s",
                    "description": "Interval at which metadata is sent to the remote server.",
                    "title": "Metadata Interval",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 820,
                      "ui-single-line-group": "Metadata"
                    }
                  },
                  "maxEntriesPerWrite": {
                    "default": 500,
                    "description": "Maximum number of metadata entries to be sent per Write request.",
                    "format": "int64",
                    "title": "Max Entries Per Write",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 830,
                      "ui-single-line-group": "Metadata"
                    }
                  }
                },
                "title": "Metadata",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 600,
                  "ui-presence-toggle": true
                }
              },
              "tls": {
                "description": "TLS configuration for secure connection to the remote server.",
                "properties": {
                  "caFile": {
                    "description": "Path to the Certificate Authority file for verifying the server certificate.",
                    "title": "CA File Path",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "CA_Skip"
                    }
                  },
                  "certFile": {
                    "description": "Path to the client certificate file.",
                    "title": "Certificate File Path",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 302,
                      "ui-single-line-group": "Client_Cert"
                    }
                  },
                  "keyFile": {
                    "description": "Path to the client key file.",
                    "title": "Key File Path",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 303,
                      "ui-single-line-group": "Client_Cert"
                    }
                  },
                  "skipVerify": {
                    "description": "Skip verifying the server certificate",
                    "title": "Skip Verify",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 301,
                      "ui-single-line-group": "CA_Skip"
                    }
                  }
                },
                "title": "TLS Configuration",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 500,
                  "ui-presence-toggle": true
                }
              },
              "url": {
                "description": "Remote server address for sending metrics.",
                "title": "Remote Server URL",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "writeOptions": {
                "description": "Remote write options such as: Flush interval, Retries, etc.",
                "properties": {
                  "bufferSize": {
                    "default": 1000,
                    "description": "The buffer size threshold that initiates sending the accumulated metrics to the remote destination once reached.",
                    "format": "int64",
                    "title": "Buffer Size",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "Flush"
                    }
                  },
                  "flushInterval": {
                    "default": "5s",
                    "description": "Interval at which metrics stored in the local buffer are sent to the remote server.\nMetrics are sent regardless of the buffer size threshold.",
                    "title": "Interval",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "Flush"
                    }
                  },
                  "headers": {
                    "description": "Custom HTTP headers to be sent along with each remote write request.",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "Header name",
                          "title": "Name",
                          "type": "string"
                        },
                        "value": {
                          "description": "Header value",
                          "title": "Value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "Headers",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 700
                    }
                  },
                  "maxRetries": {
                    "default": 3,
                    "description": "The total number of times to retry sending a message",
                    "format": "int64",
                    "title": "Max Retry",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 650,
                      "ui-single-line-group": "Retry"
                    }
                  },
                  "maxTimeSeriesPerWrite": {
                    "default": 500,
                    "description": "Maximum number of metrics per write request.",
                    "format": "int64",
                    "title": "Max Metrics per Write",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 620
                    }
                  },
                  "timeout": {
                    "default": "10s",
                    "description": "Write client timeout.",
                    "title": "Timeout",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 660,
                      "ui-single-line-group": "Retry"
                    }
                  }
                },
                "title": "Write Options",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200,
                  "ui-presence-toggle": true
                }
              }
            },
            "required": [
              "url"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ClusterDestinationStatus defines the observed state of ClusterDestination",
            "properties": {
              "error": {
                "description": "Last encountered error for this destination.",
                "title": "Error",
                "type": "string"
              },
              "lastChecked": {
                "description": "Last checked time for connectivity status",
                "format": "date-time",
                "title": "Last Checked",
                "type": "string"
              },
              "reachable": {
                "default": false,
                "description": "Indicates if the destination is reachable.",
                "title": "Reachable",
                "type": "boolean"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterDestinationList": {
        "description": "ClusterDestinationList is a list of clusterdestinations",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterDestination_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterDestination_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterDestination_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "remotewrite.eda.nokia.com",
                  "kind": "ClusterDestination",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterExport": {
        "description": "ClusterExport is the Schema for the clusterexports API",
        "properties": {
          "apiVersion": {
            "default": "remotewrite.eda.nokia.com/v1alpha1",
            "pattern": "^remotewrite\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to remotewrite.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ClusterExport",
            "pattern": "^ClusterExport$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ClusterExport",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport_metadata"
          },
          "spec": {
            "description": "ClusterExportSpec defines the desired state of ClusterExport",
            "properties": {
              "destinations": {
                "description": "List of remote destination names where metrics will be written.",
                "items": {
                  "type": "string"
                },
                "title": "Destination Servers",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "remotewrite.eda.nokia.com",
                      "resource": "clusterdestinations",
                      "type": "gvr",
                      "version": "v1alpha1"
                    }
                  ],
                  "ui-order-priority": 200
                }
              },
              "exports": {
                "description": "List of metrics and their sources to be written to a remote server.\nMetrics will be sent using the Prometheus remote write protocol.",
                "items": {
                  "properties": {
                    "fields": {
                      "description": "Optional set of fields to be exposed by this export.",
                      "items": {
                        "type": "string"
                      },
                      "title": "Fields",
                      "type": "array"
                    },
                    "interval": {
                      "description": "Period defines the frequency at which the metric is polled.",
                      "title": "Polling Interval",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 600
                      }
                    },
                    "labels": {
                      "description": "Allows adding static or dynamic labels to the metrics.",
                      "properties": {
                        "dynamic": {
                          "description": "List of dynamic labels to add to the metrics, based on a state DB path.",
                          "items": {
                            "properties": {
                              "field": {
                                "description": "The field name to add as a label",
                                "title": "Field",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1200
                                }
                              },
                              "path": {
                                "description": "The state DB path to export, in the format '.node.srl.interface'",
                                "title": "Path",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1100
                                }
                              },
                              "regex": {
                                "description": "A regular expression to be applied to the field value.",
                                "title": "Regex",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1300
                                }
                              },
                              "replacement": {
                                "description": "A regular expression replacement to be applied to the field value.",
                                "title": "Replacement",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1400
                                }
                              }
                            },
                            "required": [
                              "field",
                              "path"
                            ],
                            "type": "object"
                          },
                          "title": "Dynamic Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1400
                          }
                        },
                        "static": {
                          "description": "List of static labels to add to the metrics.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name.",
                                "pattern": "[a-zA-Z_][a-zA-Z0-9_]*",
                                "title": "Name",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 800
                                }
                              },
                              "value": {
                                "description": "Label value.",
                                "title": "Value",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 900
                                }
                              }
                            },
                            "type": "object"
                          },
                          "title": "Static Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1300
                          }
                        }
                      },
                      "title": "Metric Labels",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 900
                      }
                    },
                    "mappings": {
                      "description": "Rules for mapping metric values (e.g., DOWN -\u003e 1, UP -\u003e 2).",
                      "items": {
                        "properties": {
                          "destination": {
                            "description": "The new value for the mapped source (must convert to float64).",
                            "pattern": "^-?\\d+(\\.\\d+)?([eE][+-]?\\d+)?$",
                            "title": "Mapped Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1200
                            }
                          },
                          "source": {
                            "description": "The value to be mapped (supports regex with capture groups).",
                            "title": "Source Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1100
                            }
                          }
                        },
                        "type": "object"
                      },
                      "title": "Metric Value Mappings",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 1000
                      }
                    },
                    "metricName": {
                      "description": "Regex and replacement for renaming the metric name.",
                      "properties": {
                        "regex": {
                          "description": "Regular expression for the metric name transformation.",
                          "title": "Metric Name Regex",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1500
                          }
                        },
                        "replacement": {
                          "description": "Replacement string for the transformed metric name.",
                          "title": "Metric Name Replacement",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1600
                          }
                        }
                      },
                      "title": "Metric Name Transformation",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 800
                      }
                    },
                    "mode": {
                      "description": "Mode defines how the metric is collected: periodic, on-change, or periodic-on-change.",
                      "title": "Collection Mode",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 700
                      }
                    },
                    "path": {
                      "description": "The state DB path to export, in the format '.namespace.node.srl.interface'",
                      "title": "Path",
                      "type": "string"
                    },
                    "resource": {
                      "description": "A Custom resource to be used as a source for the metric.\nIt will generate a metric with the CR labels and a value of 1.",
                      "properties": {
                        "group": {
                          "description": "The CR group such as `core.eda.nokia.com`.",
                          "title": "Group",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 370
                          }
                        },
                        "kind": {
                          "description": "The CR kind such as `toponode`.",
                          "title": "Kind",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 390
                          }
                        },
                        "labels": {
                          "description": "List of labels to include with the metric.\nInclude all if not set.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 392
                          }
                        },
                        "name": {
                          "description": "CR name to be queried.\nGet all of not set.",
                          "title": "Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 391
                          }
                        },
                        "namespace": {
                          "description": "The CR namespace, it defaults to all if not specified.",
                          "title": "Namespace",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 360
                          }
                        },
                        "version": {
                          "description": "The CR version such as `v1` or `v1alpha1`.",
                          "title": "Version",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 380
                          }
                        }
                      },
                      "title": "Custom Resource",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 350
                      }
                    },
                    "where": {
                      "description": "Condition for filtering the metric (e.g., 'oper-state = down').",
                      "title": "Where",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 500
                      }
                    }
                  },
                  "type": "object"
                },
                "title": "Metrics Exports",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              }
            },
            "required": [
              "destinations",
              "exports"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ClusterExportStatus defines the observed state of ClusterExport",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterExportList": {
        "description": "ClusterExportList is a list of clusterexports",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterExport_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterExport_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ClusterExport_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "remotewrite.eda.nokia.com",
                  "kind": "ClusterExport",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.remotewrite.v1alpha1.Destination": {
        "description": "Destination is the Schema for the destinations API",
        "properties": {
          "apiVersion": {
            "default": "remotewrite.eda.nokia.com/v1alpha1",
            "pattern": "^remotewrite\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to remotewrite.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Destination",
            "pattern": "^Destination$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Destination",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination_metadata"
          },
          "spec": {
            "description": "DestinationSpec defines the desired state of Destination",
            "properties": {
              "authentication": {
                "description": "Authentication details (username and password) for accessing the server.",
                "properties": {
                  "password": {
                    "description": "Client password",
                    "title": "Password",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 801,
                      "ui-single-line-group": "Authentication"
                    }
                  },
                  "username": {
                    "description": "Client username",
                    "title": "Username",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 800,
                      "ui-single-line-group": "Authentication"
                    }
                  }
                },
                "title": "Authentication",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 300,
                  "ui-presence-toggle": true
                }
              },
              "authorization": {
                "description": "Authorization token for accessing the server.",
                "properties": {
                  "credentials": {
                    "description": "Credentials such as a token value",
                    "title": "Credentials",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1001,
                      "ui-single-line-group": "Authorization"
                    }
                  },
                  "type": {
                    "default": "Bearer",
                    "description": "Authorization type",
                    "title": "Type",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1000,
                      "ui-single-line-group": "Authorization"
                    }
                  }
                },
                "title": "Authorization",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 400,
                  "ui-presence-toggle": true
                }
              },
              "metadata": {
                "description": "Configuration related to sending metadata to the remote server.",
                "properties": {
                  "include": {
                    "description": "If enabled, includes metadata in the write requests.",
                    "title": "Include Metadata",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 810
                    }
                  },
                  "interval": {
                    "default": "60s",
                    "description": "Interval at which metadata is sent to the remote server.",
                    "title": "Metadata Interval",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 820,
                      "ui-single-line-group": "Metadata"
                    }
                  },
                  "maxEntriesPerWrite": {
                    "default": 500,
                    "description": "Maximum number of metadata entries to be sent per Write request.",
                    "format": "int64",
                    "title": "Max Entries Per Write",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 830,
                      "ui-single-line-group": "Metadata"
                    }
                  }
                },
                "title": "Metadata",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 600,
                  "ui-presence-toggle": true
                }
              },
              "tls": {
                "description": "TLS configuration for secure connection to the remote server.",
                "properties": {
                  "caFile": {
                    "description": "Path to the Certificate Authority file for verifying the server certificate.",
                    "title": "CA File Path",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "CA_Skip"
                    }
                  },
                  "certFile": {
                    "description": "Path to the client certificate file.",
                    "title": "Certificate File Path",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 302,
                      "ui-single-line-group": "Client_Cert"
                    }
                  },
                  "keyFile": {
                    "description": "Path to the client key file.",
                    "title": "Key File Path",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 303,
                      "ui-single-line-group": "Client_Cert"
                    }
                  },
                  "skipVerify": {
                    "description": "Skip verifying the server certificate",
                    "title": "Skip Verify",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 301,
                      "ui-single-line-group": "CA_Skip"
                    }
                  }
                },
                "title": "TLS Configuration",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 500,
                  "ui-presence-toggle": true
                }
              },
              "url": {
                "description": "Remote server address for sending metrics.",
                "title": "Remote Server URL",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              },
              "writeOptions": {
                "description": "Remote write options such as: Flush interval, Retries, etc.",
                "properties": {
                  "bufferSize": {
                    "default": 1000,
                    "description": "The buffer size threshold that initiates sending the accumulated metrics to the remote destination once reached.",
                    "format": "int64",
                    "title": "Buffer Size",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "Flush"
                    }
                  },
                  "flushInterval": {
                    "default": "5s",
                    "description": "Interval at which metrics stored in the local buffer are sent to the remote server.\nMetrics are sent regardless of the buffer size threshold.",
                    "title": "Interval",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "Flush"
                    }
                  },
                  "headers": {
                    "description": "Custom HTTP headers to be sent along with each remote write request.",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "Header name",
                          "title": "Name",
                          "type": "string"
                        },
                        "value": {
                          "description": "Header value",
                          "title": "Value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "Headers",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 700
                    }
                  },
                  "maxRetries": {
                    "default": 3,
                    "description": "The total number of times to retry sending a message",
                    "format": "int64",
                    "title": "Max Retry",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 650,
                      "ui-single-line-group": "Retry"
                    }
                  },
                  "maxTimeSeriesPerWrite": {
                    "default": 500,
                    "description": "Maximum number of metrics per write request.",
                    "format": "int64",
                    "title": "Max Metrics per Write",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 620
                    }
                  },
                  "timeout": {
                    "default": "10s",
                    "description": "Write client timeout.",
                    "title": "Timeout",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 660,
                      "ui-single-line-group": "Retry"
                    }
                  }
                },
                "title": "Write Options",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 200,
                  "ui-presence-toggle": true
                }
              }
            },
            "required": [
              "url"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "DestinationStatus defines the observed state of Destination",
            "properties": {
              "error": {
                "description": "Last encountered error for this destination.",
                "title": "Error",
                "type": "string"
              },
              "lastChecked": {
                "description": "Last checked time for connectivity status",
                "format": "date-time",
                "title": "Last Checked",
                "type": "string"
              },
              "reachable": {
                "default": false,
                "description": "Indicates if the destination is reachable.",
                "title": "Reachable",
                "type": "boolean"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.DestinationList": {
        "description": "DestinationList is a list of destinations",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.Destination_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.Destination_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.remotewrite.v1alpha1.Destination_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "remotewrite.eda.nokia.com",
                  "kind": "Destination",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.remotewrite.v1alpha1.Export": {
        "description": "Export is the Schema for the exports API",
        "properties": {
          "apiVersion": {
            "default": "remotewrite.eda.nokia.com/v1alpha1",
            "pattern": "^remotewrite\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to remotewrite.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Export",
            "pattern": "^Export$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Export",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export_metadata"
          },
          "spec": {
            "description": "ExportSpec defines the desired state of Export",
            "properties": {
              "destinations": {
                "description": "List of remote destination names where metrics will be written.",
                "items": {
                  "type": "string"
                },
                "title": "Destination Servers",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "remotewrite.eda.nokia.com",
                      "resource": "destinations",
                      "type": "gvr",
                      "version": "v1alpha1"
                    }
                  ],
                  "ui-order-priority": 200
                }
              },
              "exports": {
                "description": "List of metrics and their sources to be written to a remote server.\nMetrics will be sent using the Prometheus remote write protocol.",
                "items": {
                  "properties": {
                    "fields": {
                      "description": "Optional set of fields to be exposed by this export.",
                      "items": {
                        "type": "string"
                      },
                      "title": "Fields",
                      "type": "array"
                    },
                    "interval": {
                      "description": "Period defines the frequency at which the metric is polled.",
                      "title": "Polling Interval",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 600
                      }
                    },
                    "labels": {
                      "description": "Allows adding static or dynamic labels to the metrics.",
                      "properties": {
                        "dynamic": {
                          "description": "List of dynamic labels to add to the metrics, based on a state DB path.",
                          "items": {
                            "properties": {
                              "field": {
                                "description": "The field name to add as a label",
                                "title": "Field",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1200
                                }
                              },
                              "path": {
                                "description": "The state DB path to export, in the format '.node.srl.interface'",
                                "title": "Path",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1100
                                }
                              },
                              "regex": {
                                "description": "A regular expression to be applied to the field value.",
                                "title": "Regex",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1300
                                }
                              },
                              "replacement": {
                                "description": "A regular expression replacement to be applied to the field value.",
                                "title": "Replacement",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1400
                                }
                              }
                            },
                            "required": [
                              "field",
                              "path"
                            ],
                            "type": "object"
                          },
                          "title": "Dynamic Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1400
                          }
                        },
                        "static": {
                          "description": "List of static labels to add to the metrics.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name.",
                                "pattern": "[a-zA-Z_][a-zA-Z0-9_]*",
                                "title": "Name",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 800
                                }
                              },
                              "value": {
                                "description": "Label value.",
                                "title": "Value",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 900
                                }
                              }
                            },
                            "type": "object"
                          },
                          "title": "Static Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1300
                          }
                        }
                      },
                      "title": "Metric Labels",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 900
                      }
                    },
                    "mappings": {
                      "description": "Rules for mapping metric values (e.g., DOWN -\u003e 1, UP -\u003e 2).",
                      "items": {
                        "properties": {
                          "destination": {
                            "description": "The new value for the mapped source (must convert to float64).",
                            "pattern": "^-?\\d+(\\.\\d+)?([eE][+-]?\\d+)?$",
                            "title": "Mapped Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1200
                            }
                          },
                          "source": {
                            "description": "The value to be mapped (supports regex with capture groups).",
                            "title": "Source Value",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1100
                            }
                          }
                        },
                        "type": "object"
                      },
                      "title": "Metric Value Mappings",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 1000
                      }
                    },
                    "metricName": {
                      "description": "Regex and replacement for renaming the metric name.",
                      "properties": {
                        "regex": {
                          "description": "Regular expression for the metric name transformation.",
                          "title": "Metric Name Regex",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1500
                          }
                        },
                        "replacement": {
                          "description": "Replacement string for the transformed metric name.",
                          "title": "Metric Name Replacement",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1600
                          }
                        }
                      },
                      "title": "Metric Name Transformation",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 800
                      }
                    },
                    "mode": {
                      "description": "Mode defines how the metric is collected: periodic, on-change, or periodic-on-change.",
                      "title": "Collection Mode",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 700
                      }
                    },
                    "path": {
                      "description": "The state DB path to export, in the format '.node.srl.interface'",
                      "title": "Path",
                      "type": "string"
                    },
                    "resource": {
                      "description": "A Custom resource to be used as a source for the metric.\nIt will generate a metric with the CR labels and a value of 1.",
                      "properties": {
                        "group": {
                          "description": "The CR group such as `core.eda.nokia.com`.",
                          "title": "Group",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 370
                          }
                        },
                        "kind": {
                          "description": "The CR kind such as `toponode`.",
                          "title": "Kind",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 390
                          }
                        },
                        "labels": {
                          "description": "List of labels to include with the metric.\nInclude all if not set.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 392
                          }
                        },
                        "name": {
                          "description": "CR name to be queried.\nGet all of not set.",
                          "title": "Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 391
                          }
                        },
                        "version": {
                          "description": "The CR version such as `v1` or `v1alpha1`.",
                          "title": "Version",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 380
                          }
                        }
                      },
                      "title": "Custom Resource",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 350
                      }
                    },
                    "where": {
                      "description": "Condition for filtering the metric (e.g., 'oper-state = down').",
                      "title": "Where",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 500
                      }
                    }
                  },
                  "required": [
                    "path"
                  ],
                  "type": "object"
                },
                "title": "Metrics Exports",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 100
                }
              }
            },
            "required": [
              "destinations",
              "exports"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ExportStatus defines the observed state of Export",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.ExportList": {
        "description": "ExportList is a list of exports",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.Export_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.remotewrite.v1alpha1.Export_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.remotewrite.v1alpha1.Export_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "remotewrite.eda.nokia.com",
                  "kind": "Export",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Remote Write Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/remotewrite.eda.nokia.com": {
      "get": {
        "description": "list versions available from remotewrite.eda.nokia.com",
        "operationId": "getVersionRemotewriteEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from remotewrite.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesRemotewriteEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for remotewrite.eda.nokia.com v1alpha1",
        "operationId": "uiRemotewriteEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterdestinations": {
      "delete": {
        "description": "Delete all instances of ClusterDestination.  If ClusterDestination is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterDestination, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestinationList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestinationList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterdestinations",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterDestination",
        "operationId": "createRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterdestinations/_deleted": {
      "get": {
        "operationId": "getDeletedRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterDestination that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterdestinations/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterDestination",
        "operationId": "deleteRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "description": "name of the ClusterDestination to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterDestination.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "description": "name of the ClusterDestination",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterDestination",
        "operationId": "patchRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterDestination",
        "operationId": "replaceRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterDestination"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterdestinations/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "description": "name of the ClusterDestination to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterDestination.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterdestinations/{name}/_topology": {
      "get": {
        "operationId": "getTopologyRemotewriteEdaNokiaComV1alpha1Clusterdestinations",
        "parameters": [
          {
            "description": "name of the ClusterDestination to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterDestination.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterexports": {
      "delete": {
        "description": "Delete all instances of ClusterExport.  If ClusterExport is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced ClusterExport, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list clusterexports",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced ClusterExport",
        "operationId": "createRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterexports/_deleted": {
      "get": {
        "operationId": "getDeletedRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ClusterExport that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterexports/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced ClusterExport",
        "operationId": "deleteRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "name of the ClusterExport to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced ClusterExport.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "name of the ClusterExport",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced ClusterExport",
        "operationId": "patchRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced ClusterExport",
        "operationId": "replaceRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ClusterExport"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterexports/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "name of the ClusterExport to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced ClusterExport.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/clusterexports/{name}/_topology": {
      "get": {
        "operationId": "getTopologyRemotewriteEdaNokiaComV1alpha1Clusterexports",
        "parameters": [
          {
            "description": "name of the ClusterExport to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified non-namespaced ClusterExport.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/destinations": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRemotewriteEdaNokiaComV1alpha1Destinations",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.DestinationList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list destinations",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/exports": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRemotewriteEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list exports",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/destinations": {
      "delete": {
        "operationId": "deleteAllRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.DestinationList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Destination in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.DestinationList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list destinations in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Destination",
        "operationId": "createRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/destinations/_deleted": {
      "get": {
        "operationId": "getDeletedRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Destination that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/destinations/{name}": {
      "delete": {
        "description": "delete the specified Destination",
        "operationId": "deleteRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Destination to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Destination.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "description": "name of the Destination",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Destination",
        "operationId": "patchRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Destination",
        "operationId": "replaceRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Destination"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/destinations/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "description": "name of the Destination to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Destination.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/destinations/{name}/_topology": {
      "get": {
        "operationId": "getTopologyRemotewriteEdaNokiaComV1alpha1NamespaceDestinations",
        "parameters": [
          {
            "description": "name of the Destination to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Destination.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports": {
      "delete": {
        "operationId": "deleteAllRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Export in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.ExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list exports in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Export",
        "operationId": "createRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports/_deleted": {
      "get": {
        "operationId": "getDeletedRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Export that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports/{name}": {
      "delete": {
        "description": "delete the specified Export",
        "operationId": "deleteRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Export to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Export.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "name of the Export",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Export",
        "operationId": "patchRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Export",
        "operationId": "replaceRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.remotewrite.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "name of the Export to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Export.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/remotewrite.eda.nokia.com/v1alpha1/namespaces/{namespace}/exports/{name}/_topology": {
      "get": {
        "operationId": "getTopologyRemotewriteEdaNokiaComV1alpha1NamespaceExports",
        "parameters": [
          {
            "description": "name of the Export to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Export.",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}